import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'login_page.dart';
import 'register_page.dart';
import 'main_page.dart';
import 'profile_page.dart';
import 'edit_profile_page.dart';
import 'team_selection_page.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: AuthChecker(), // üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      routes: {
        '/login': (context) => LoginPage(),
        '/register': (context) => RegisterPage(),
        '/team-selection': (context) => TeamSelectionPage(),
        '/main': (context) => MainPage(),
        '/profile': (context) => ProfilePage(),
        '/edit-profile': (context) => EditProfilePage(),
      },
    );
  }
}

/// ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ—à—ë–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –µ—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ –∫–æ–º–∞–Ω–¥–∞
class AuthChecker extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(), // üî• –°–ª–µ–¥–∏–º –∑–∞ –≤—Ö–æ–¥–æ–º/–≤—ã—Ö–æ–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Scaffold(body: Center(child: CircularProgressIndicator()));
        }

        User? user = snapshot.data;

        if (user == null) {
          // üî• –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –≤–æ—à—ë–ª ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ LoginPage
          return LoginPage();
        }

        // üî• –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à—ë–ª, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –∫–æ–º–∞–Ω–¥—É
        return FutureBuilder(
          future: _checkUserTeam(user.uid),
          builder: (context, AsyncSnapshot<bool> teamSnapshot) {
            if (teamSnapshot.connectionState == ConnectionState.waiting) {
              return const Scaffold(body: Center(child: CircularProgressIndicator()));
            }
            if (teamSnapshot.hasError) {
              return Scaffold(body: Center(child: Text("–û—à–∏–±–∫–∞: ${teamSnapshot.error}")));
            }
            return teamSnapshot.data == true ? MainPage() : TeamSelectionPage();
          },
        );
      },
    );
  }

  /// üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º Firestore, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ
  Future<bool> _checkUserTeam(String userId) async {
    QuerySnapshot teams = await FirebaseFirestore.instance
        .collection('teams')
        .where('members', arrayContains: userId)
        .get();

    return teams.docs.isNotEmpty; // ‚úÖ –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞ ‚Üí true, –∏–Ω–∞—á–µ false
  }
}
