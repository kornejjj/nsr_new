import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'login_page.dart';
import 'register_page.dart';
import 'main_page.dart';
import 'profile_page.dart';
import 'edit_profile_page.dart';
import 'team_selection_page.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: AuthChecker(), // üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      routes: {
        '/login': (context) => LoginPage(),
        '/register': (context) => RegisterPage(),
        '/team-selection': (context) => TeamSelectionPage(),
        '/main': (context) => MainPage(),
        '/profile': (context) => ProfilePage(),
        '/edit-profile': (context) => EditProfilePage(),
      },
    );
  }
}

/// ‚úÖ **–ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ—à—ë–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –æ–Ω –≤ –∫–æ–º–∞–Ω–¥–µ**
class AuthChecker extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return _buildLoadingScreen(); // üî• –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
        }

        User? user = snapshot.data;

        if (user == null) {
          return LoginPage(); // üî• –ï—Å–ª–∏ –Ω–µ –≤–æ—à—ë–ª ‚Üí –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        }

        return FutureBuilder<bool>(
          future: _checkUserTeam(user.uid),
          builder: (context, teamSnapshot) {
            if (teamSnapshot.connectionState == ConnectionState.waiting) {
              return _buildLoadingScreen(); // üîÑ –û–∂–∏–¥–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–º–∞–Ω–¥—ã
            }
            if (teamSnapshot.hasError) {
              return _buildErrorScreen(teamSnapshot.error.toString());
            }

            return teamSnapshot.data == true ? MainPage() : TeamSelectionPage();
          },
        );
      },
    );
  }

  /// üî• **–ü—Ä–æ–≤–µ—Ä—è–µ–º Firestore: —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ**
  Future<bool> _checkUserTeam(String userId) async {
    QuerySnapshot teams = await FirebaseFirestore.instance
        .collection('teams')
        .where('members', arrayContains: userId)
        .get();

    return teams.docs.isNotEmpty;
  }

  /// üîÑ **–≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏**
  Widget _buildLoadingScreen() {
    return const Scaffold(
      body: Center(
        child: CircularProgressIndicator(),
      ),
    );
  }

  /// ‚ùå **–≠–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏**
  Widget _buildErrorScreen(String errorMessage) {
    return Scaffold(
      body: Center(
        child: Text("–û—à–∏–±–∫–∞: $errorMessage", style: const TextStyle(color: Colors.red)),
      ),
    );
  }
}
