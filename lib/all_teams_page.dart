import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'main_page.dart';
import 'team_page.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º TeamPage
import 'bottom_nav_bar.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º BottomNavBar

class AllTeamsPage extends StatelessWidget {
  const AllTeamsPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(
          '–í—Å–µ –∫–æ–º–∞–Ω–¥—ã',
          style: TextStyle(color: Colors.black, fontWeight: FontWeight.bold),
        ),
        backgroundColor: Colors.yellow[600],
        elevation: 0,
        centerTitle: true, // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ —Ü–µ–Ω—Ç—Ä—É
        automaticallyImplyLeading: false, // –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–µ–ª–∫—É –Ω–∞–∑–∞–¥
      ),
      bottomNavigationBar: BottomNavBar(currentIndex: 2, onDestinationSelected: (_) {}), // –£–±–∏—Ä–∞–µ–º const
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFFFFD54F), Color(0xFFFFE082), Color(0xFFFFF9C4)],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
          ),
        ),
        child: StreamBuilder<QuerySnapshot>(
          stream: FirebaseFirestore.instance.collection('teams').snapshots(),
          builder: (context, snapshot) {
            if (snapshot.connectionState == ConnectionState.waiting) {
              return const Center(child: CircularProgressIndicator(color: Colors.black));
            }
            if (snapshot.hasError) {
              return Center(
                child: Text(
                  '–û—à–∏–±–∫–∞: ${snapshot.error}',
                  style: const TextStyle(color: Colors.red, fontSize: 16),
                ),
              );
            }
            if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {
              return const Center(
                child: Text(
                  '–ö–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
                  style: TextStyle(fontSize: 18, fontWeight: FontWeight.w500),
                ),
              );
            }

            // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±–∞–ª–ª–æ–≤ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
            final teams = snapshot.data!.docs;
            teams.sort((a, b) {
              final aPoints = (a['points'] ?? 0).toInt();
              final bPoints = (b['points'] ?? 0).toInt();
              return bPoints.compareTo(aPoints);
            });

            return ListView.builder(
              padding: const EdgeInsets.all(16),
              itemCount: teams.length,
              itemBuilder: (context, index) {
                final team = teams[index].data() as Map<String, dynamic>;

                // –ú–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ (–∏–Ω–¥–µ–∫—Å + 1)
                final teamPlace = index + 1;

                return _TeamCard(
                  name: team['name'] ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
                  points: team['points']?.toString() ?? '0',
                  teamId: teams[index].id, // –ü–µ—Ä–µ–¥–∞–µ–º teamId
                  avatarUrl: team['avatar'] ?? 'assets/team_logo.png', // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
                  teamPlace: teamPlace, // –ü–µ—Ä–µ–¥–∞–µ–º –º–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—ã
                );
              },
            );
          },
        ),
      ),
    );
  }
}

/// üìå **–ö–∞—Ä—Ç–æ—á–∫–∞ –∫–æ–º–∞–Ω–¥—ã**
class _TeamCard extends StatelessWidget {
  final String name;
  final String points;
  final String teamId; // –î–æ–±–∞–≤–ª—è–µ–º teamId
  final String avatarUrl; // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
  final int teamPlace; // –ú–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ

  const _TeamCard({
    required this.name,
    required this.points,
    required this.teamId, // –ü—Ä–∏–Ω–∏–º–∞–µ–º teamId
    required this.avatarUrl, // –ü—Ä–∏–Ω–∏–º–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    required this.teamPlace, // –ü—Ä–∏–Ω–∏–º–∞–µ–º –º–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—ã
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15)),
      elevation: 5,
      margin: const EdgeInsets.only(bottom: 16),
      child: InkWell(
        onTap: () {
          // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–∞–Ω–¥—ã
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => TeamPage(teamId: teamId), // –ü–µ—Ä–µ–¥–∞–µ–º teamId
            ),
          );
        },
        child: Padding(
          padding: const EdgeInsets.all(16),
          child: Row(
            children: [
              // –ú–µ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
              Container(
                width: 40,
                height: 40,
                decoration: BoxDecoration(
                  color: Colors.amber[800],
                  shape: BoxShape.circle,
                ),
                child: Center(
                  child: Text(
                    '$teamPlace',
                    style: const TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ),
              const SizedBox(width: 16),
              // –ê–≤–∞—Ç–∞—Ä –∫–æ–º–∞–Ω–¥—ã
              CircleAvatar(
                radius: 30,
                backgroundImage: avatarUrl.startsWith("http")
                    ? NetworkImage(avatarUrl)
                    : AssetImage(avatarUrl) as ImageProvider,
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      name,
                      style: const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 8),
                    _buildInfoItem(Icons.star, '$points –æ—á–∫–æ–≤'),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildInfoItem(IconData icon, String text) {
    return Row(
      children: [
        Icon(icon, size: 18, color: Colors.amber[800]),
        const SizedBox(width: 4),
        Text(text, style: const TextStyle(fontSize: 16)),
      ],
    );
  }
}