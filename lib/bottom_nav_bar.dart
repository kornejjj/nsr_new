import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º FirebaseAuth
import 'package:cloud_firestore/cloud_firestore.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º FirebaseFirestore
import 'main_page.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º MainPage
import 'team_page.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º TeamPage
import 'team_selection_page.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º TeamSelectionPage
import 'profile_page.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ProfilePage
import 'edit_profile_page.dart'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º EditProfilePage

/// üìå **–ó–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–∞—è –Ω–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å**
class BottomNavBar extends StatelessWidget {
  final int currentIndex;
  final Function(int) onDestinationSelected;

  const BottomNavBar({
    super.key,
    required this.currentIndex,
    required this.onDestinationSelected,
  });

  @override
  Widget build(BuildContext context) {
    return NavigationBar(
      selectedIndex: currentIndex,
      onDestinationSelected: (index) {
        onDestinationSelected(index); // –í—ã–∑—ã–≤–∞–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∫–æ–ª–±—ç–∫
        _navigateToPage(context, index); // –í—ã–∑—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
      },
      destinations: const [
        NavigationDestination(icon: Icon(Icons.home), label: '–ì–ª–∞–≤–Ω–∞—è'),
        NavigationDestination(icon: Icon(Icons.shopping_cart), label: '–ú–∞–≥–∞–∑–∏–Ω'),
        NavigationDestination(icon: Icon(Icons.group), label: '–ö–æ–º–∞–Ω–¥–∞'),
        NavigationDestination(icon: Icon(Icons.person), label: '–ü—Ä–æ—Ñ–∏–ª—å'),
      ],
    );
  }

  /// üî• –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  void _navigateToPage(BuildContext context, int index) {
    switch (index) {
      case 0: // –ì–ª–∞–≤–Ω–∞—è
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(builder: (context) => MainPage()),
        );
        break;
      case 1: // –ú–∞–≥–∞–∑–∏–Ω
      // –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–∞–≥–∞–∑–∏–Ω–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text("–ú–∞–≥–∞–∑–∏–Ω –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")),
        );
        break;
      case 2: // –ö–æ–º–∞–Ω–¥–∞
        _navigateToTeamPage(context);
        break;
      case 3: // –ü—Ä–æ—Ñ–∏–ª—å
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(builder: (context) => ProfilePage()),
        );
        break;
    }
  }

  /// üî• –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–∞–Ω–¥—ã
  Future<void> _navigateToTeamPage(BuildContext context) async {
    final user = FirebaseAuth.instance.currentUser;
    if (user == null) return;

    final teams = await FirebaseFirestore.instance
        .collection('teams')
        .where('members', arrayContains: user.uid)
        .get();

    if (teams.docs.isNotEmpty) {
      String teamId = teams.docs.first.id;
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (context) => TeamPage(teamId: teamId),
        ),
      );
    } else {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => TeamSelectionPage()),
      );
    }
  }
}